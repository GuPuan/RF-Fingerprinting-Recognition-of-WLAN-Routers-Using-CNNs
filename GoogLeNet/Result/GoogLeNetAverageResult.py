import matplotlib.pyplot as plt

# Data for plotting
x = [0, 1, 2, 3, 4, 5, 6, 7]

# Average accuracy values for each layer
b0a = 0.9803
b1a = 0.9755
b2a = 0.9819
b3a = 0.9814
b4a = 0.9784
c1a = 0.9788
c2a = 0.9807
c3a = 0.9812
y = [b0a, c1a, b1a, c2a, c3a, b2a, b3a, b4a]

# Accuracy measurements for each layer
b0 = [0.9827272727272728, 0.9845454545454545, 0.9827272727272728, 0.9818181818181818,
      0.980909090909091, 0.980909090909091, 0.9763636363636363, 0.9827272727272728,
      0.98, 0.9818181818181818, 0.9681818181818181, 0.9790909090909091,
      0.9763636363636363, 0.9836363636363636, 0.9790909090909091, 0.9827272727272728,
      0.9827272727272728, 0.98, 0.9754545454545455, 0.9763636363636363]

c1 = [0.9745454545454545, 0.9736363636363636, 0.98, 0.9727272727272728,
      0.9772727272727273, 0.9863636363636363, 0.9818181818181818, 0.9727272727272728,
      0.9827272727272728, 0.9736363636363636, 0.9736363636363636, 0.9654545454545455,
      0.9863636363636363, 0.9747, 0.9845454545454545, 0.9827272727272728,
      0.9863636363636363, 0.98, 0.9772727272727273, 0.9845454545454545]

c2 = [0.9690909090909091, 0.9827272727272728, 0.9890909090909091, 0.980909090909091,
      0.980909090909091, 0.9854545454545455, 0.9818181818181818, 0.9772727272727273,
      0.9845454545454545, 0.9818181818181818, 0.9881818181818182, 0.9754545454545455,
      0.9781818181818182, 0.9881818181818182, 0.9754545454545455, 0.9845454545454545,
      0.9818181818181818, 0.9827272727272728, 0.9654545454545455, 0.9772727272727273,
      0.9763636363636363]

c3 = [0.980909090909091, 0.9863636363636363, 0.9827272727272728, 0.9818181818181818,
      0.9763636363636363, 0.9781818181818182, 0.9781818181818182, 0.9781818181818182,
      0.9754545454545455, 0.9772727272727273, 0.98, 0.980909090909091, 0.9836363636363636,
      0.99, 0.9736363636363636, 0.9836363636363636, 0.9845454545454545,
      0.9845454545454545, 0.9818181818181818, 0.9872727272727273]

b1 = [0.9745454545454545, 0.9754545454545455, 0.9672727272727273, 0.9781818181818182,
      0.9636363636363636, 0.97, 0.9836363636363636, 0.9863636363636363,
      0.9781818181818182, 0.9618181818181818, 0.97, 0.98, 0.9845454545454545,
      0.9781818181818182, 0.9727272727272728, 0.9745454545454545, 0.98,
      0.9781818181818182, 0.9727272727272728, 0.9772727272727273]

b2 = [0.98, 0.9854545454545455, 0.9881818181818182, 0.9772727272727273,
      0.980909090909091, 0.9863636363636363, 0.9863636363636363, 0.9845454545454545,
      0.9836363636363636, 0.98, 0.980909090909091, 0.9754545454545455,
      0.980909090909091, 0.9790909090909091, 0.9790909090909091, 0.9827272727272728,
      0.9872727272727273, 0.9836363636363636, 0.9772727272727273, 0.9790909090909091]

b3 = [0.9854545454545455, 0.980909090909091, 0.9790909090909091, 0.9736363636363636,
      0.9818181818181818, 0.980909090909091, 0.9772727272727273, 0.97,
      0.9881818181818182, 0.9827272727272728, 0.9627272727272728, 0.980909090909091,
      0.98, 0.9845454545454545, 0.9881818181818182, 0.9918181818181818,
      0.98, 0.98, 0.9827272727272728, 0.9881818181818182]

b4 = [0.9836363636363636, 0.9754545454545455, 0.98, 0.9818181818181818,
      0.99, 0.98, 0.9736363636363636, 0.980909090909091, 0.98, 0.98,
      0.9681818181818181, 0.980909090909091, 0.980909090909091, 0.9790909090909091,
      0.9827272727272728, 0.9772727272727273, 0.9772727272727273, 0.9754545454545455,
      0.9745454545454545, 0.9681818181818181]

# Combine the data into a single list for easy iteration
data = [b0, c1, b1, c2, c3, b2, b3, b4]

# Set the figure size and adjust margins
plt.figure(figsize=(6, 4))  # Reduce the figure width
plt.subplots_adjust(left=0.2, right=0.5, top=0.8, bottom=0.3)  # Adjust margins

# Plot scatter plots for each group of data
for i, b in enumerate(data):
    max_value = max(b)
    min_value = min(b)
    for value in b:
        # Highlight the min and max values with a different color
        color = 'black' if value == max_value or value == min_value else 'red'
        plt.scatter(i, value, color=color, marker='x', s=100)

# Plot the average accuracy values as a line plot
plt.plot(x, y, marker='o', linestyle='-', color='b', label='Average Value')

# Add legend for the plot
plt.scatter([], [], color='red', marker='x', label='Measured Values')
plt.scatter([], [], color='black', marker='x', label='Measured Min/Max')

# Add title and axis labels
plt.xlabel('Layer', fontsize=24)
plt.ylabel('Average Accuracy', fontsize=24)

# Customize x-axis labels to represent different layers
labels = ['N$_{G}$', 'C$_{G}^{1}$', 'P$_{G}^{1}$', 'C$_{G}^{2}$', 'C$_{G}^{3}$', 'P$_{G}^{2}$', 'P$_{G}^{3}$',
          'P$_{G}^{4}$']
plt.xticks(x, labels, fontsize=24)
plt.yticks(fontsize=24)

# Limit y-axis range to make the plot more compact
plt.ylim(min(min(b) for b in data) - 0.001, max(max(b) for b in data) + 0.001)  # Further tighten y-axis range

# Display the legend
plt.legend(fontsize=18)

# Show the final plot
plt.show()
