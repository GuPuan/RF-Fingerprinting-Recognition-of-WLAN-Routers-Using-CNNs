options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[IEEE802.11]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: hb
    hier_block_src_path: '.:'
    id: wifi_phy_hier
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: WiFi PHY Hier
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 48.0]
    rotation: 0
    state: enabled

blocks:
- name: DC_offset
  id: variable
  parameters:
    comment: ''
    value: '-32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1480, 376.0]
    rotation: 0
    state: enabled
- name: DC_offset_string
  id: variable
  parameters:
    comment: ''
    value: str(float(DC_offset))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 216.0]
    rotation: 0
    state: enabled
- name: fre_offset
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1272, 376.0]
    rotation: 0
    state: enabled
- name: fre_offset_string
  id: variable
  parameters:
    comment: ''
    value: str(float(fre_offset))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [128, 240.0]
    rotation: 0
    state: enabled
- name: header_formatter
  id: variable
  parameters:
    comment: ''
    value: ieee802_11.signal_field()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2880, 132.0]
    rotation: 0
    state: enabled
- name: max_symbols
  id: variable
  parameters:
    comment: ''
    value: int(5 + 1 + ((16 + 800 * 8 + 6) * 2) / 24)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2592, 132.0]
    rotation: 0
    state: enabled
- name: phase_noise
  id: variable
  parameters:
    comment: ''
    value: '0.311'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072, 376.0]
    rotation: 0
    state: enabled
- name: phase_noise_string
  id: variable
  parameters:
    comment: ''
    value: str(float(phase_noise))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 216.0]
    rotation: 0
    state: enabled
- name: sync_length
  id: variable
  parameters:
    comment: ''
    value: '320'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 64.0]
    rotation: 0
    state: enabled
- name: window_size
  id: variable
  parameters:
    comment: ''
    value: '48'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 64.0]
    rotation: 0
    state: enabled
- name: bandwidth
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: ''
    short_id: ''
    type: eng_float
    value: 20e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1600, 96.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_0
  id: blocks_complex_to_mag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1848, 1852.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 2060.0]
    rotation: 0
    state: enabled
- name: blocks_conjugate_cc_0
  id: blocks_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 1604.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: sync_length
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    showports: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [3112, 1608.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '16'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    showports: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 1432.0]
    rotation: 0
    state: enabled
- name: blocks_divide_xx_0
  id: blocks_divide_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2464, 1860.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0_0_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: "'/home/buan/\u684C\u9762/Supporting Material/LeNet/initial_data/ori_data/'+phase_noise_string+'_'+fre_offset_string+'_'+DC_offset_string"
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [3664, 1904.0]
    rotation: 0
    state: enabled
- name: blocks_moving_average_xx_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: window_size
    max_iter: '4000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1432, 1624.0]
    rotation: 0
    state: true
- name: blocks_moving_average_xx_1
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: window_size  + 16
    max_iter: '4000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2040, 1976.0]
    rotation: 0
    state: true
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 1700.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '64'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [3444.0, 2096]
    rotation: 270
    state: enabled
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: max_symbols * 48 * 8
    ninputs: '2'
    tag_preserve_head_pos: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1960, 664.0]
    rotation: 0
    state: enabled
- name: chan_est
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: ''
    short_id: ''
    type: ''
    value: ieee802_11.LS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1056, 92.0]
    rotation: 0
    state: enabled
- name: digital_chunks_to_symbols_xx_0
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: max_symbols * 48 * 8 * 2
    num_ports: '1'
    out_type: complex
    symbol_table: '[-1, 1]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1368, 620.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_carrier_allocator_cvc_0_0_0
  id: digital_ofdm_carrier_allocator_cvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_len: '64'
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: max_symbols * 48 * 8
    occupied_carriers: (list(range(-26, -21)) + list(range(-20, -7)) + list(range(-6,
      0)) + list(range(1, 7)) + list(range(8, 21)) +list( range(22, 27)),)
    output_is_shifted: 'True'
    pilot_carriers: ((-21, -7, 7, 21), )
    pilot_symbols: ((1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (-1,
      -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1),
      (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1,
      -1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1,
      1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1,
      -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1,
      -1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1,
      -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1,
      -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1,
      1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1,
      -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1),
      (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1),
      (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1),
      (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1,
      1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1,
      1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1,
      -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1,
      -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1),
      (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1),
      (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1,
      1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (1,
      1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1), (1,
      1, 1, -1), (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (-1,
      -1, -1, 1), (-1, -1, -1, 1), (1, 1, 1, -1), (-1, -1, -1, 1), (-1, -1, -1, 1),
      (-1, -1, -1, 1), (1, 1, 1, -1), (1, 1, 1, -1), (1, 1, 1, -1), (-1, -1, -1, 1),
      (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1, -1, 1), (-1, -1,
      -1, 1), (-1, -1, -1, 1))
    sync_words: ((0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),
      0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),
      0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j),
      0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j),
      0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),
      0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j),
      0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j),
      0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j),
      0.0, 0.0, 0.0, (-1.4719601443879746-1.4719601443879746j), 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),
      0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j),
      0.0, 0.0, 0.0, (1.4719601443879746+1.4719601443879746j), 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0), (0, 0j, 0, 0j, 0, 0j, -1, 1j, -1, 1j, -1, 1j, -1, -1j, 1, 1j,
      1, -1j, -1, 1j, 1, 1j, 1, 1j, 1, 1j, -1, (-0-1j), 1, -1j, -1, 1j, 0, -1j, 1,
      (-0-1j), 1, -1j, 1, 1j, -1, -1j, 1, (-0-1j), -1, 1j, 1, 1j, 1, 1j, 1, 1j, -1,
      -1j, 1, 1j, 1, -1j, -1, 0j, 0, 0j, 0, 0j), (0, 0, 0, 0, 0, 0, 1, 1, -1, -1,
      1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 0, 1,
      -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1,
      1, 1, 1, 1, 0, 0, 0, 0, 0))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2712, 536.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_cyclic_prefixer_0_0
  id: digital_ofdm_cyclic_prefixer
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: '16'
    input_size: '64'
    maxoutbuf: '0'
    minoutbuf: max_symbols * 48 * 8 * 10
    rolloff: '2'
    tagname: '"packet_len"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2032, 1100.0]
    rotation: 180
    state: enabled
- name: digital_packet_headergenerator_bb_0
  id: digital_packet_headergenerator_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    header_formatter: header_formatter.formatter()
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 596.0]
    rotation: 0
    state: enabled
- name: encoding
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: ''
    short_id: ''
    type: ''
    value: ieee802_11.BPSK_1_2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2168, 132.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n        \nimport numpy\
      \ as np\nfrom gnuradio import gr\n\nclass PhaseNoiseBlock(gr.sync_block):\n\
      \    \"\"\"Embedded Python Block example - a simple phase noise adder\"\"\"\n\
      \n    def __init__(self, rms_degrees=0.3):\n        \"\"\"Arguments to this\
      \ function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Phase Noise Block',  # Will show up in\
      \ GRC\n            in_sig=[(np.complex64, 64)],  # Input is a complex vector\
      \ of length 64\n            out_sig=[(np.complex64, 64)]  # Output is also a\
      \ complex vector of length 64\n        )\n        # Set the RMS value for phase\
      \ noise in degrees\n        self.rms_degrees = rms_degrees\n        self.rms_radians\
      \ = np.deg2rad(self.rms_degrees)  # Convert the RMS value to radians\n\n   \
      \ def work(self, input_items, output_items):\n        \"\"\"Add phase noise\
      \ to the input signal\"\"\"\n        # Get the input OFDM signal\n        ofdm_signal\
      \ = input_items[0]\n        # Generate phase noise with each vector of length\
      \ 64\n        phase_noise = np.random.normal(0, self.rms_radians, ofdm_signal.shape)\n\
      \        # Apply the phase noise to each element\n        output_items[0][:]\
      \ = ofdm_signal * np.exp(1j * phase_noise)\n        return len(output_items[0])\
      \  # Return the length of the output\n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    rms_degrees: phase_noise
  states:
    _io_cache: ('Phase Noise Block', 'PhaseNoiseBlock', [('rms_degrees', '0.3')],
      [('0', 'complex', 64)], [('0', 'complex', 64)], 'Embedded Python Block example
      - a simple phase noise adder', ['rms_degrees'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [3552.0, 768]
    rotation: 270
    state: enabled
- name: epy_block_0_0
  id: epy_block
  parameters:
    _source_code: "\nimport numpy as np\nfrom gnuradio import gr\n\nclass FrequencyOffsetBlock(gr.sync_block):\n\
      \    \"\"\"Embedded Python Block example - a simple frequency offset adder\"\
      \"\"\n\n    def __init__(self, freq_offset_ppm=4, sample_rate=20e6, center_freq=5.765e9):\n\
      \        \"\"\"Arguments to this function show up as parameters in GRC\"\"\"\
      \n        gr.sync_block.__init__(\n            self,\n            name='Frequency\
      \ Offset Block',  # Will show up in GRC\n            in_sig=[(np.complex64,\
      \ 64)],  # Input is a complex vector of length 64\n            out_sig=[(np.complex64,\
      \ 64)]  # Output is also a complex vector of length 64\n        )\n        #\
      \ Set the frequency offset parameters\n        self.freq_offset_ppm = freq_offset_ppm\n\
      \        self.sample_rate = sample_rate\n        self.center_freq = center_freq\n\
      \        self.freq_offset = self.freq_offset_ppm * 1e-6 * self.center_freq \
      \ # Calculate the frequency offset\n\n    def work(self, input_items, output_items):\n\
      \        \"\"\"Add frequency offset to the input signal\"\"\"\n        # Get\
      \ the input OFDM signal\n        ofdm_signal = input_items[0]\n        num_samples\
      \ = ofdm_signal.shape[1]\n        # Generate the time vector\n        t = np.arange(num_samples)\
      \ / self.sample_rate\n        # Generate the complex exponential for the frequency\
      \ offset\n        freq_offset_exp = np.exp(2j * np.pi * self.freq_offset * t)\n\
      \        # Apply the frequency offset to each element\n        output_items[0][:]\
      \ = ofdm_signal * freq_offset_exp\n        return len(output_items[0])  # Return\
      \ the length of the output\n\n"
    affinity: ''
    alias: ''
    center_freq: frequency
    comment: ''
    freq_offset_ppm: fre_offset
    maxoutbuf: '0'
    minoutbuf: '0'
    sample_rate: '20000000'
  states:
    _io_cache: ('Frequency Offset Block', 'FrequencyOffsetBlock', [('freq_offset_ppm',
      '4'), ('sample_rate', '20000000.0'), ('center_freq', '5765000000.0')], [('0',
      'complex', 64)], [('0', 'complex', 64)], 'Embedded Python Block example - a
      simple frequency offset adder', ['center_freq', 'freq_offset_ppm', 'sample_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2592, 1144.0]
    rotation: 180
    state: enabled
- name: epy_block_0_0_0
  id: epy_block
  parameters:
    _source_code: "\nimport numpy as np\nfrom gnuradio import gr\n\nclass DCOffsetBlock(gr.sync_block):\n\
      \    \"\"\"Embedded Python Block example - a simple DC offset adder\"\"\"\n\n\
      \    def __init__(self, dc_offset_dBc=-32):\n        \"\"\"Arguments to this\
      \ function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='DC Offset Block',  # Will show up in GRC\n\
      \            in_sig=[np.complex64],  # Input is a complex data stream\n    \
      \        out_sig=[np.complex64]  # Output is also a complex data stream\n  \
      \      )\n        # Set the DC offset value in dBc\n        self.dc_offset_dBc\
      \ = dc_offset_dBc\n        self.dc_offset = 10 ** (self.dc_offset_dBc / 20.0)\
      \  # Convert dBc to a linear scale factor\n\n    def work(self, input_items,\
      \ output_items):\n        \"\"\"Add DC offset to the input signal\"\"\"\n  \
      \      # Get the input OFDM signal\n        ofdm_signal = input_items[0]\n \
      \       # Apply the DC offset to each element\n        output_items[0][:] =\
      \ ofdm_signal + self.dc_offset\n        return len(output_items[0])  # Return\
      \ the length of the output\n\n"
    affinity: ''
    alias: ''
    comment: ''
    dc_offset_dBc: DC_offset
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('DC Offset Block', 'DCOffsetBlock', [('dc_offset_dBc', '-32')], [('0',
      'complex', 1)], [('0', 'complex', 1)], 'Embedded Python Block example - a simple
      DC offset adder', ['dc_offset_dBc'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1544, 1120.0]
    rotation: 180
    state: enabled
- name: fft_vxx_0_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: '64'
    forward: 'False'
    maxoutbuf: '0'
    minoutbuf: max_symbols * 48 * 8 * 10
    nthreads: '1'
    shift: 'True'
    type: complex
    window: tuple([1/52**.5] * 64)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [3160, 1052.0]
    rotation: 180
    state: enabled
- name: fft_vxx_0_1
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: '64'
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: window.rectangular(64)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2680, 2300.0]
    rotation: 180
    state: enabled
- name: frequency
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: ''
    short_id: ''
    type: eng_float
    value: 5.765e9
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1344, 96.0]
    rotation: 0
    state: enabled
- name: ieee802_11_chunks_to_symbols_xx_0
  id: ieee802_11_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: max_symbols * 48 * 8
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 824.0]
    rotation: 0
    state: enabled
- name: ieee802_11_decode_mac_0
  id: ieee802_11_decode_mac
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1360, 2312.0]
    rotation: 180
    state: enabled
- name: ieee802_11_frame_equalizer_0
  id: ieee802_11_frame_equalizer
  parameters:
    affinity: ''
    algo: chan_est
    alias: ''
    bw: bandwidth
    comment: ''
    debug: 'False'
    freq: frequency
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2040, 2308.0]
    rotation: 180
    state: enabled
- name: ieee802_11_mapper_0
  id: ieee802_11_mapper
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    encoding: encoding
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 1016.0]
    rotation: 180
    state: enabled
- name: pad_sink_0
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: samp_out
    num_streams: '1'
    optional: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1568, 1320.0]
    rotation: 0
    state: enabled
- name: pad_sink_1
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: carrier
    num_streams: '1'
    optional: 'True'
    type: message
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1656, 2520.0]
    rotation: 180
    state: enabled
- name: pad_sink_2
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: mac_out
    num_streams: '1'
    optional: 'True'
    type: message
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 2328.0]
    rotation: 180
    state: enabled
- name: pad_source_0
  id: pad_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: samp_in
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: '1'
    optional: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 1712.0]
    rotation: 0
    state: enabled
- name: pad_source_1
  id: pad_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: mac_in
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: '1'
    optional: 'True'
    type: message
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 1032.0]
    rotation: 180
    state: enabled
- name: sensitivity
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: ''
    short_id: ''
    type: eng_float
    value: '0.56'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1904, 96.0]
    rotation: 0
    state: enabled
- name: sync_long
  id: ieee802_11_sync_long
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    sync_length: sync_length
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [3504, 1464.0]
    rotation: 0
    state: enabled
- name: sync_short
  id: ieee802_11_sync_short
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    log: 'False'
    maxoutbuf: '0'
    min_plateau: '2'
    minoutbuf: '0'
    threshold: sensitivity
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2728, 1416.0]
    rotation: 0
    state: enabled

connections:
- [blocks_complex_to_mag_0, '0', blocks_divide_xx_0, '0']
- [blocks_complex_to_mag_squared_0, '0', blocks_moving_average_xx_1, '0']
- [blocks_conjugate_cc_0, '0', blocks_multiply_xx_0, '0']
- [blocks_delay_0, '0', sync_long, '1']
- [blocks_delay_0_0, '0', blocks_conjugate_cc_0, '0']
- [blocks_delay_0_0, '0', sync_short, '0']
- [blocks_divide_xx_0, '0', sync_short, '2']
- [blocks_moving_average_xx_0, '0', blocks_complex_to_mag_0, '0']
- [blocks_moving_average_xx_0, '0', sync_short, '1']
- [blocks_moving_average_xx_1, '0', blocks_divide_xx_0, '1']
- [blocks_multiply_xx_0, '0', blocks_moving_average_xx_0, '0']
- [blocks_stream_to_vector_0, '0', fft_vxx_0_1, '0']
- [blocks_tagged_stream_mux_0, '0', digital_ofdm_carrier_allocator_cvc_0_0_0, '0']
- [digital_chunks_to_symbols_xx_0, '0', blocks_tagged_stream_mux_0, '0']
- [digital_ofdm_carrier_allocator_cvc_0_0_0, '0', epy_block_0, '0']
- [digital_ofdm_cyclic_prefixer_0_0, '0', epy_block_0_0_0, '0']
- [digital_packet_headergenerator_bb_0, '0', digital_chunks_to_symbols_xx_0, '0']
- [epy_block_0, '0', fft_vxx_0_0, '0']
- [epy_block_0_0, '0', digital_ofdm_cyclic_prefixer_0_0, '0']
- [epy_block_0_0_0, '0', pad_sink_0, '0']
- [fft_vxx_0_0, '0', epy_block_0_0, '0']
- [fft_vxx_0_1, '0', ieee802_11_frame_equalizer_0, '0']
- [ieee802_11_chunks_to_symbols_xx_0, '0', blocks_tagged_stream_mux_0, '1']
- [ieee802_11_decode_mac_0, out, pad_sink_2, in]
- [ieee802_11_frame_equalizer_0, '0', ieee802_11_decode_mac_0, '0']
- [ieee802_11_frame_equalizer_0, symbols, pad_sink_1, in]
- [ieee802_11_mapper_0, '0', digital_packet_headergenerator_bb_0, '0']
- [ieee802_11_mapper_0, '0', ieee802_11_chunks_to_symbols_xx_0, '0']
- [pad_source_0, '0', blocks_complex_to_mag_squared_0, '0']
- [pad_source_0, '0', blocks_delay_0_0, '0']
- [pad_source_0, '0', blocks_multiply_xx_0, '1']
- [pad_source_1, out, ieee802_11_mapper_0, in]
- [sync_long, '0', blocks_file_sink_0_0_0, '0']
- [sync_long, '0', blocks_stream_to_vector_0, '0']
- [sync_short, '0', blocks_delay_0, '0']
- [sync_short, '0', sync_long, '0']

metadata:
  file_format: 1
  grc_version: 3.10.10.0
